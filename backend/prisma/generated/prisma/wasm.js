
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BaseCompetitionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  sportId: 'sportId',
  description: 'description',
  status: 'status',
  startDate: 'startDate',
  endDate: 'endDate',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BaseCountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  code: 'code',
  note: 'note',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BaseFieldScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  isActive: 'isActive',
  sportIds: 'sportIds',
  countryId: 'countryId',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BaseGroupLevelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  minAge: 'minAge',
  maxAge: 'maxAge',
  skillLevel: 'skillLevel',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BaseSportScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GameEventScalarFieldEnum = {
  id: 'id',
  sportId: 'sportId',
  competitionId: 'competitionId',
  eventDate: 'eventDate',
  venue: 'venue',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GameMatcheScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  homeTeamId: 'homeTeamId',
  awayTeamId: 'awayTeamId',
  homeTeamScore: 'homeTeamScore',
  awayTeamScore: 'awayTeamScore',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchEventScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  playerId: 'playerId',
  teamId: 'teamId',
  eventType: 'eventType',
  minute: 'minute',
  second: 'second',
  description: 'description',
  eventData: 'eventData',
  fieldX: 'fieldX',
  fieldY: 'fieldY',
  isConfirmed: 'isConfirmed',
  createdBy: 'createdBy',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchLineupScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  teamId: 'teamId',
  formation: 'formation',
  lineupData: 'lineupData',
  announcedAt: 'announcedAt',
  isConfirmed: 'isConfirmed',
  createdBy: 'createdBy',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchMediaScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  mediaType: 'mediaType',
  fileName: 'fileName',
  filePath: 'filePath',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  description: 'description',
  category: 'category',
  isPublic: 'isPublic',
  uploadedBy: 'uploadedBy',
  uploadedAt: 'uploadedAt',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchRosterScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  playerId: 'playerId',
  teamId: 'teamId',
  isStarting: 'isStarting',
  isSubstitute: 'isSubstitute',
  position: 'position',
  jerseyNumber: 'jerseyNumber',
  substitutionInMinute: 'substitutionInMinute',
  substitutionOutMinute: 'substitutionOutMinute',
  substitutionReason: 'substitutionReason',
  minutesPlayed: 'minutesPlayed',
  status: 'status',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MatchStatisticScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  playerId: 'playerId',
  teamId: 'teamId',
  minutesPlayed: 'minutesPlayed',
  goals: 'goals',
  assists: 'assists',
  shots: 'shots',
  shots_on_target: 'shots_on_target',
  passes: 'passes',
  passesCompleted: 'passesCompleted',
  passAccuracy: 'passAccuracy',
  tackles: 'tackles',
  interceptions: 'interceptions',
  clearances: 'clearances',
  blocks: 'blocks',
  yellowCards: 'yellowCards',
  redCards: 'redCards',
  foulsCommitted: 'foulsCommitted',
  foulsWon: 'foulsWon',
  saves: 'saves',
  goalsConceded: 'goalsConceded',
  cleanSheets: 'cleanSheets',
  rating: 'rating',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberClubAdminScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  clubId: 'clubId',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberCoacheScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  licenseNumber: 'licenseNumber',
  certification: 'certification',
  specialization: 'specialization',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberParentScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  status: 'status',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberPersonScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  dob: 'dob',
  gender: 'gender',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  countryId: 'countryId',
  photoPath: 'photoPath',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberPlayerScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  height: 'height',
  weight: 'weight',
  preferredFoot: 'preferredFoot',
  contractStart: 'contractStart',
  contractEnd: 'contractEnd',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberRefereeScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  licenseNumber: 'licenseNumber',
  licenseLevel: 'licenseLevel',
  certification: 'certification',
  refereeType: 'refereeType',
  specialization: 'specialization',
  languages: 'languages',
  matchFee: 'matchFee',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberSponsorScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  contactPerson: 'contactPerson',
  email: 'email',
  phone: 'phone',
  website: 'website',
  sponsorLevel: 'sponsorLevel',
  sponsorshipAmount: 'sponsorshipAmount',
  contractStart: 'contractStart',
  contractEnd: 'contractEnd',
  benefits: 'benefits',
  logoPath: 'logoPath',
  status: 'status',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberTeamManagerScalarFieldEnum = {
  id: 'id',
  personId: 'personId',
  appointedDate: 'appointedDate',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrgClubScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  description: 'description',
  foundedDate: 'foundedDate',
  address: 'address',
  contactEmail: 'contactEmail',
  contactPhone: 'contactPhone',
  website: 'website',
  status: 'status',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrgLeagueScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  description: 'description',
  gameModeId: 'gameModeId',
  groupLevelId: 'groupLevelId',
  season: 'season',
  startDate: 'startDate',
  endDate: 'endDate',
  registrationDeadline: 'registrationDeadline',
  maxTeams: 'maxTeams',
  entryFee: 'entryFee',
  subscribeEmail: 'subscribeEmail',
  rules: 'rules',
  status: 'status',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrgTeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  clubId: 'clubId',
  sportId: 'sportId',
  leagueId: 'leagueId',
  ageGroup: 'ageGroup',
  gender: 'gender',
  skillLevel: 'skillLevel',
  color1: 'color1',
  color2: 'color2',
  maxPlayers: 'maxPlayers',
  status: 'status',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlanGameScalarFieldEnum = {
  id: 'id',
  leagueId: 'leagueId',
  gameName: 'gameName',
  homeTeamId: 'homeTeamId',
  awayTeamId: 'awayTeamId',
  startDatetime: 'startDatetime',
  endDatetime: 'endDatetime',
  duration: 'duration',
  uniform: 'uniform',
  locationId: 'locationId',
  isScrimmage: 'isScrimmage',
  status: 'status',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlanMeetingScalarFieldEnum = {
  id: 'id',
  meetingCategory: 'meetingCategory',
  teamId: 'teamId',
  startDatetime: 'startDatetime',
  endDatetime: 'endDatetime',
  title: 'title',
  content: 'content',
  locationId: 'locationId',
  status: 'status',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlanTrainingScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  startDatetime: 'startDatetime',
  endDatetime: 'endDatetime',
  trainingContent: 'trainingContent',
  isAllMembers: 'isAllMembers',
  locationId: 'locationId',
  recurringType: 'recurringType',
  status: 'status',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelClubClubAdminScalarFieldEnum = {
  id: 'id',
  clubId: 'clubId',
  adminId: 'adminId',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  status: 'status',
  role: 'role',
  salary: 'salary',
  contractStart: 'contractStart',
  contractEnd: 'contractEnd',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelCompetitionGroupLevelScalarFieldEnum = {
  id: 'id',
  competitionId: 'competitionId',
  groupLevelId: 'groupLevelId',
  isPrimary: 'isPrimary',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelFieldSportScalarFieldEnum = {
  id: 'id',
  fieldId: 'fieldId',
  sportId: 'sportId',
  isPrimary: 'isPrimary',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelMatchRefereeScalarFieldEnum = {
  id: 'id',
  matchId: 'matchId',
  refereeId: 'refereeId',
  assignedAt: 'assignedAt',
  confirmedAt: 'confirmedAt',
  cancelledAt: 'cancelledAt',
  status: 'status',
  matchFee: 'matchFee',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelPlayerParentScalarFieldEnum = {
  id: 'id',
  playerId: 'playerId',
  parentId: 'parentId',
  assignedAt: 'assignedAt',
  removedAt: 'removedAt',
  relationship: 'relationship',
  isPrimaryContact: 'isPrimaryContact',
  canPickup: 'canPickup',
  receivesNotifications: 'receivesNotifications',
  occupation: 'occupation',
  employer: 'employer',
  workPhone: 'workPhone',
  status: 'status',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelSponsorClubScalarFieldEnum = {
  id: 'id',
  sponsorId: 'sponsorId',
  clubId: 'clubId',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  status: 'status',
  sponsorshipAmount: 'sponsorshipAmount',
  benefits: 'benefits',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelSponsorLeagueScalarFieldEnum = {
  id: 'id',
  sponsorId: 'sponsorId',
  leagueId: 'leagueId',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  status: 'status',
  sponsorshipAmount: 'sponsorshipAmount',
  benefits: 'benefits',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelSponsorTeamScalarFieldEnum = {
  id: 'id',
  sponsorId: 'sponsorId',
  teamId: 'teamId',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  status: 'status',
  sponsorshipAmount: 'sponsorshipAmount',
  benefits: 'benefits',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelTeamCoachScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  coachId: 'coachId',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  status: 'status',
  coachTypeId: 'coachTypeId',
  salary: 'salary',
  contractStart: 'contractStart',
  contractEnd: 'contractEnd',
  responsibilities: 'responsibilities',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelTeamPlayerScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  playerId: 'playerId',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  status: 'status',
  jerseyNumber: 'jerseyNumber',
  positionId: 'positionId',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RelTeamTeamManagerScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  managerId: 'managerId',
  joinedAt: 'joinedAt',
  leftAt: 'leftAt',
  status: 'status',
  managerTypeId: 'managerTypeId',
  salary: 'salary',
  contractStart: 'contractStart',
  contractEnd: 'contractEnd',
  responsibilities: 'responsibilities',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportCoachTypeScalarFieldEnum = {
  id: 'id',
  sportId: 'sportId',
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportEventTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  category: 'category',
  evaluationMetric: 'evaluationMetric',
  code: 'code',
  sportId: 'sportId',
  isVisible: 'isVisible',
  note: 'note',
  ord: 'ord',
  score: 'score',
  slot: 'slot',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportGamePeriodScalarFieldEnum = {
  id: 'id',
  sportId: 'sportId',
  name: 'name',
  ord: 'ord',
  duration: 'duration',
  note: 'note',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportManagerTypeScalarFieldEnum = {
  id: 'id',
  sportId: 'sportId',
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportPlayerPositionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  sportId: 'sportId',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SportRefereeTypeScalarFieldEnum = {
  id: 'id',
  sportId: 'sportId',
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubFeatureScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category: 'category',
  icon: 'icon',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubForTeamScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  planId: 'planId',
  status: 'status',
  startedAt: 'startedAt',
  expiresAt: 'expiresAt',
  autoRenew: 'autoRenew',
  paymentMethod: 'paymentMethod',
  lastPaymentAt: 'lastPaymentAt',
  nextPaymentAt: 'nextPaymentAt',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubForUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planId: 'planId',
  status: 'status',
  startedAt: 'startedAt',
  expiresAt: 'expiresAt',
  autoRenew: 'autoRenew',
  paymentMethod: 'paymentMethod',
  lastPaymentAt: 'lastPaymentAt',
  nextPaymentAt: 'nextPaymentAt',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  planType: 'planType',
  price: 'price',
  isPopular: 'isPopular',
  description: 'description',
  features: 'features',
  maxTeams: 'maxTeams',
  maxPlayers: 'maxPlayers',
  maxCoaches: 'maxCoaches',
  maxReferees: 'maxReferees',
  storageLimitGb: 'storageLimitGb',
  isActive: 'isActive',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubPlanFeatureScalarFieldEnum = {
  id: 'id',
  planId: 'planId',
  featureId: 'featureId',
  isIncluded: 'isIncluded',
  notes: 'notes',
  ord: 'ord',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SysUserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  emailVerifiedAt: 'emailVerifiedAt',
  password: 'password',
  status: 'status',
  personId: 'personId',
  rememberToken: 'rememberToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.BaseCompetitionOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  description: 'description',
  status: 'status'
};

exports.Prisma.BaseCountryOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  code: 'code',
  note: 'note'
};

exports.Prisma.BaseFieldOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  note: 'note'
};

exports.Prisma.BaseGroupLevelOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  skillLevel: 'skillLevel'
};

exports.Prisma.BaseSportOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  note: 'note'
};

exports.Prisma.GameEventOrderByRelevanceFieldEnum = {
  venue: 'venue',
  status: 'status'
};

exports.Prisma.GameMatcheOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.MatchEventOrderByRelevanceFieldEnum = {
  eventType: 'eventType',
  description: 'description',
  eventData: 'eventData',
  notes: 'notes'
};

exports.Prisma.MatchLineupOrderByRelevanceFieldEnum = {
  formation: 'formation',
  lineupData: 'lineupData',
  notes: 'notes'
};

exports.Prisma.MatchMediaOrderByRelevanceFieldEnum = {
  mediaType: 'mediaType',
  fileName: 'fileName',
  filePath: 'filePath',
  mimeType: 'mimeType',
  description: 'description',
  category: 'category',
  notes: 'notes'
};

exports.Prisma.MatchRosterOrderByRelevanceFieldEnum = {
  position: 'position',
  jerseyNumber: 'jerseyNumber',
  substitutionReason: 'substitutionReason',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.MatchStatisticOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.MemberClubAdminOrderByRelevanceFieldEnum = {
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio'
};

exports.Prisma.MemberCoacheOrderByRelevanceFieldEnum = {
  licenseNumber: 'licenseNumber',
  certification: 'certification',
  specialization: 'specialization',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio'
};

exports.Prisma.MemberParentOrderByRelevanceFieldEnum = {
  status: 'status',
  notes: 'notes'
};

exports.Prisma.MemberPersonOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  gender: 'gender',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  photoPath: 'photoPath',
  status: 'status'
};

exports.Prisma.MemberPlayerOrderByRelevanceFieldEnum = {
  preferredFoot: 'preferredFoot',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio'
};

exports.Prisma.MemberRefereeOrderByRelevanceFieldEnum = {
  licenseNumber: 'licenseNumber',
  licenseLevel: 'licenseLevel',
  certification: 'certification',
  refereeType: 'refereeType',
  specialization: 'specialization',
  languages: 'languages',
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio'
};

exports.Prisma.MemberSponsorOrderByRelevanceFieldEnum = {
  companyName: 'companyName',
  contactPerson: 'contactPerson',
  email: 'email',
  phone: 'phone',
  website: 'website',
  sponsorLevel: 'sponsorLevel',
  benefits: 'benefits',
  logoPath: 'logoPath',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.MemberTeamManagerOrderByRelevanceFieldEnum = {
  emergencyContactName: 'emergencyContactName',
  emergencyContactPhone: 'emergencyContactPhone',
  status: 'status',
  bio: 'bio'
};

exports.Prisma.OrgClubOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  description: 'description',
  address: 'address',
  contactEmail: 'contactEmail',
  contactPhone: 'contactPhone',
  website: 'website',
  status: 'status'
};

exports.Prisma.OrgLeagueOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  description: 'description',
  season: 'season',
  subscribeEmail: 'subscribeEmail',
  rules: 'rules',
  status: 'status'
};

exports.Prisma.OrgTeamOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  note: 'note',
  ageGroup: 'ageGroup',
  skillLevel: 'skillLevel',
  color1: 'color1',
  color2: 'color2'
};

exports.Prisma.PlanGameOrderByRelevanceFieldEnum = {
  gameName: 'gameName',
  uniform: 'uniform',
  status: 'status'
};

exports.Prisma.PlanMeetingOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.PlanTrainingOrderByRelevanceFieldEnum = {
  trainingContent: 'trainingContent',
  status: 'status'
};

exports.Prisma.RelClubClubAdminOrderByRelevanceFieldEnum = {
  status: 'status',
  role: 'role',
  notes: 'notes'
};

exports.Prisma.RelCompetitionGroupLevelOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.RelFieldSportOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.RelMatchRefereeOrderByRelevanceFieldEnum = {
  status: 'status',
  notes: 'notes'
};

exports.Prisma.RelPlayerParentOrderByRelevanceFieldEnum = {
  relationship: 'relationship',
  occupation: 'occupation',
  employer: 'employer',
  workPhone: 'workPhone',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.RelSponsorClubOrderByRelevanceFieldEnum = {
  status: 'status',
  benefits: 'benefits',
  notes: 'notes'
};

exports.Prisma.RelSponsorLeagueOrderByRelevanceFieldEnum = {
  status: 'status',
  benefits: 'benefits',
  notes: 'notes'
};

exports.Prisma.RelSponsorTeamOrderByRelevanceFieldEnum = {
  status: 'status',
  benefits: 'benefits',
  notes: 'notes'
};

exports.Prisma.RelTeamCoachOrderByRelevanceFieldEnum = {
  status: 'status',
  responsibilities: 'responsibilities',
  notes: 'notes'
};

exports.Prisma.RelTeamPlayerOrderByRelevanceFieldEnum = {
  status: 'status',
  jerseyNumber: 'jerseyNumber',
  notes: 'notes'
};

exports.Prisma.RelTeamTeamManagerOrderByRelevanceFieldEnum = {
  status: 'status',
  managerTypeId: 'managerTypeId',
  responsibilities: 'responsibilities',
  notes: 'notes'
};

exports.Prisma.SportCoachTypeOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note'
};

exports.Prisma.SportEventTypeOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  code: 'code',
  note: 'note'
};

exports.Prisma.SportGamePeriodOrderByRelevanceFieldEnum = {
  name: 'name',
  note: 'note'
};

exports.Prisma.SportManagerTypeOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note'
};

exports.Prisma.SportPlayerPositionOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  note: 'note'
};

exports.Prisma.SportRefereeTypeOrderByRelevanceFieldEnum = {
  name: 'name',
  abbr: 'abbr',
  color: 'color',
  note: 'note'
};

exports.Prisma.SubFeatureOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  category: 'category',
  icon: 'icon'
};

exports.Prisma.SubForTeamOrderByRelevanceFieldEnum = {
  status: 'status',
  paymentMethod: 'paymentMethod',
  notes: 'notes'
};

exports.Prisma.SubForUserOrderByRelevanceFieldEnum = {
  status: 'status',
  paymentMethod: 'paymentMethod',
  notes: 'notes'
};

exports.Prisma.SubPlanOrderByRelevanceFieldEnum = {
  name: 'name',
  planType: 'planType',
  description: 'description',
  features: 'features'
};

exports.Prisma.SubPlanFeatureOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.SysUserOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  status: 'status',
  rememberToken: 'rememberToken'
};


exports.Prisma.ModelName = {
  BaseCompetition: 'BaseCompetition',
  BaseCountry: 'BaseCountry',
  BaseField: 'BaseField',
  BaseGroupLevel: 'BaseGroupLevel',
  BaseSport: 'BaseSport',
  GameEvent: 'GameEvent',
  GameMatche: 'GameMatche',
  MatchEvent: 'MatchEvent',
  MatchLineup: 'MatchLineup',
  MatchMedia: 'MatchMedia',
  MatchRoster: 'MatchRoster',
  MatchStatistic: 'MatchStatistic',
  MemberClubAdmin: 'MemberClubAdmin',
  MemberCoache: 'MemberCoache',
  MemberParent: 'MemberParent',
  MemberPerson: 'MemberPerson',
  MemberPlayer: 'MemberPlayer',
  MemberReferee: 'MemberReferee',
  MemberSponsor: 'MemberSponsor',
  MemberTeamManager: 'MemberTeamManager',
  OrgClub: 'OrgClub',
  OrgLeague: 'OrgLeague',
  OrgTeam: 'OrgTeam',
  PlanGame: 'PlanGame',
  PlanMeeting: 'PlanMeeting',
  PlanTraining: 'PlanTraining',
  RelClubClubAdmin: 'RelClubClubAdmin',
  RelCompetitionGroupLevel: 'RelCompetitionGroupLevel',
  RelFieldSport: 'RelFieldSport',
  RelMatchReferee: 'RelMatchReferee',
  RelPlayerParent: 'RelPlayerParent',
  RelSponsorClub: 'RelSponsorClub',
  RelSponsorLeague: 'RelSponsorLeague',
  RelSponsorTeam: 'RelSponsorTeam',
  RelTeamCoach: 'RelTeamCoach',
  RelTeamPlayer: 'RelTeamPlayer',
  RelTeamTeamManager: 'RelTeamTeamManager',
  SportCoachType: 'SportCoachType',
  SportEventType: 'SportEventType',
  SportGamePeriod: 'SportGamePeriod',
  SportManagerType: 'SportManagerType',
  SportPlayerPosition: 'SportPlayerPosition',
  SportRefereeType: 'SportRefereeType',
  SubFeature: 'SubFeature',
  SubForTeam: 'SubForTeam',
  SubForUser: 'SubForUser',
  SubPlan: 'SubPlan',
  SubPlanFeature: 'SubPlanFeature',
  SysUser: 'SysUser'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Admin\\workspace\\ezsportsrp\\EZSportsRPv4\\backend\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "windows"
      }
    ],
    "previewFeatures": [
      "fullTextSearchPostgres",
      "metrics"
    ],
    "sourceFilePath": "C:\\Users\\Admin\\workspace\\ezsportsrp\\EZSportsRPv4\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./generated/prisma\"\n  previewFeatures = [\"fullTextSearchPostgres\", \"metrics\"]\n  binaryTargets   = [\"native\", \"windows\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel BaseCompetition {\n  id          Decimal   @id(map: \"base_competitions_pkey\") @db.Decimal(20, 0)\n  name        String    @db.VarChar(100)\n  abbr        String?   @db.VarChar(100)\n  sportId     Decimal?  @db.Decimal(20, 0)\n  description String?\n  status      String    @db.VarChar(255)\n  startDate   DateTime? @db.Date\n  endDate     DateTime? @db.Date\n  ord         Int?\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@index([sportId], map: \"base_competitions_sport_id_foreign\")\n}\n\nmodel BaseCountry {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique\n  abbr      String?\n  code      String?\n  note      String?\n  isActive  Boolean  @default(true)\n  ord       Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime\n}\n\nmodel BaseField {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique\n  abbr      String?\n  note      String?\n  isActive  Boolean  @default(true)\n  sportIds  Int[]\n  countryId Int?\n  ord       Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime\n}\n\nmodel BaseGroupLevel {\n  id         Decimal   @id(map: \"base_group_levels_pkey\") @db.Decimal(20, 0)\n  name       String    @db.VarChar(100)\n  abbr       String?   @db.VarChar(100)\n  note       String?\n  minAge     Int?\n  maxAge     Int?\n  skillLevel String?   @db.VarChar(100)\n  ord        Int?\n  createdAt  DateTime? @db.Timestamp(6)\n  updatedAt  DateTime? @db.Timestamp(6)\n}\n\nmodel BaseSport {\n  id        Int      @id @default(autoincrement())\n  name      String   @unique\n  abbr      String?\n  note      String?\n  isActive  Boolean  @default(true)\n  ord       Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime\n}\n\nmodel GameEvent {\n  id            Decimal   @id(map: \"game_events_pkey\") @db.Decimal(20, 0)\n  sportId       Decimal   @db.Decimal(20, 0)\n  competitionId Decimal?  @db.Decimal(20, 0)\n  eventDate     DateTime  @db.Date\n  venue         String?   @db.VarChar(100)\n  status        String    @db.VarChar(255)\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@index([competitionId], map: \"game_events_competition_id_foreign\")\n  @@index([sportId], map: \"game_events_sport_id_foreign\")\n}\n\nmodel GameMatche {\n  id            Decimal   @id(map: \"game_matches_pkey\") @db.Decimal(20, 0)\n  eventId       Decimal   @db.Decimal(20, 0)\n  homeTeamId    Decimal   @db.Decimal(20, 0)\n  awayTeamId    Decimal   @db.Decimal(20, 0)\n  homeTeamScore Int?\n  awayTeamScore Int?\n  status        String    @db.VarChar(255)\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@index([awayTeamId], map: \"game_matches_away_team_id_foreign\")\n  @@index([eventId], map: \"game_matches_event_id_foreign\")\n  @@index([homeTeamId], map: \"game_matches_home_team_id_foreign\")\n}\n\nmodel MatchEvent {\n  id          Decimal   @id(map: \"match_events_pkey\") @db.Decimal(20, 0)\n  matchId     Decimal   @db.Decimal(20, 0)\n  playerId    Decimal?  @db.Decimal(20, 0)\n  teamId      Decimal?  @db.Decimal(20, 0)\n  eventType   String    @db.VarChar(255)\n  minute      Int\n  second      Int\n  description String?\n  eventData   String?\n  fieldX      Decimal?  @db.Decimal(5, 2)\n  fieldY      Decimal?  @db.Decimal(5, 2)\n  isConfirmed Int       @db.SmallInt\n  createdBy   Decimal?  @db.Decimal(20, 0)\n  notes       String?\n  ord         Int\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@index([createdBy, createdAt], map: \"match_events_created_by_created_at_index\")\n  @@index([matchId, eventType], map: \"match_events_match_id_event_type_index\")\n  @@index([matchId, isConfirmed], map: \"match_events_match_id_is_confirmed_index\")\n  @@index([matchId, minute], map: \"match_events_match_id_minute_index\")\n  @@index([playerId, matchId], map: \"match_events_player_id_match_id_index\")\n  @@index([teamId, matchId], map: \"match_events_team_id_match_id_index\")\n}\n\nmodel MatchLineup {\n  id          Decimal   @id(map: \"match_lineups_pkey\") @db.Decimal(20, 0)\n  matchId     Decimal   @db.Decimal(20, 0)\n  teamId      Decimal   @db.Decimal(20, 0)\n  formation   String?   @db.VarChar(100)\n  lineupData  String?\n  announcedAt DateTime? @db.Timestamp(6)\n  isConfirmed Int       @db.SmallInt\n  createdBy   Decimal?  @db.Decimal(20, 0)\n  notes       String?\n  ord         Int\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@unique([matchId, teamId], map: \"match_lineups_match_id_team_id_unique\")\n  @@index([createdBy, createdAt], map: \"match_lineups_created_by_created_at_index\")\n  @@index([formation], map: \"match_lineups_formation_index\")\n  @@index([matchId, isConfirmed], map: \"match_lineups_match_id_is_confirmed_index\")\n  @@index([teamId, matchId], map: \"match_lineups_team_id_match_id_index\")\n}\n\nmodel MatchMedia {\n  id          Decimal   @id(map: \"match_media_pkey\") @db.Decimal(20, 0)\n  matchId     Decimal   @db.Decimal(20, 0)\n  mediaType   String    @db.VarChar(255)\n  fileName    String    @db.VarChar(100)\n  filePath    String    @db.VarChar(100)\n  fileSize    BigInt?\n  mimeType    String?   @db.VarChar(100)\n  description String?\n  category    String?   @db.VarChar(100)\n  isPublic    Int       @db.SmallInt\n  uploadedBy  Decimal?  @db.Decimal(20, 0)\n  uploadedAt  DateTime  @db.Timestamp(6)\n  notes       String?\n  ord         Int\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@index([isPublic, uploadedAt], map: \"match_media_is_public_uploaded_at_index\")\n  @@index([matchId, category], map: \"match_media_match_id_category_index\")\n  @@index([matchId, mediaType], map: \"match_media_match_id_media_type_index\")\n  @@index([mediaType, isPublic], map: \"match_media_media_type_is_public_index\")\n  @@index([uploadedBy, uploadedAt], map: \"match_media_uploaded_by_uploaded_at_index\")\n}\n\nmodel MatchRoster {\n  id                    Decimal   @id(map: \"match_roster_pkey\") @db.Decimal(20, 0)\n  matchId               Decimal   @db.Decimal(20, 0)\n  playerId              Decimal   @db.Decimal(20, 0)\n  teamId                Decimal   @db.Decimal(20, 0)\n  isStarting            Int       @db.SmallInt\n  isSubstitute          Int       @db.SmallInt\n  position              String?   @db.VarChar(100)\n  jerseyNumber          String?   @db.VarChar(100)\n  substitutionInMinute  Int?\n  substitutionOutMinute Int?\n  substitutionReason    String?   @db.VarChar(255)\n  minutesPlayed         Int?\n  status                String    @db.VarChar(255)\n  notes                 String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@unique([matchId, playerId], map: \"match_roster_match_id_player_id_unique\")\n  @@index([matchId, isStarting], map: \"match_roster_match_id_is_starting_index\")\n  @@index([matchId, isSubstitute], map: \"match_roster_match_id_is_substitute_index\")\n  @@index([matchId, teamId], map: \"match_roster_match_id_team_id_index\")\n  @@index([playerId, matchId], map: \"match_roster_player_id_match_id_index\")\n  @@index([teamId, matchId, status], map: \"match_roster_team_id_match_id_status_index\")\n}\n\nmodel MatchStatistic {\n  id              Decimal   @id(map: \"match_statistics_pkey\") @db.Decimal(20, 0)\n  matchId         Decimal   @db.Decimal(20, 0)\n  playerId        Decimal   @db.Decimal(20, 0)\n  teamId          Decimal   @db.Decimal(20, 0)\n  minutesPlayed   Int\n  goals           Int\n  assists         Int\n  shots           Int\n  shots_on_target Int\n  passes          Int\n  passesCompleted Int\n  passAccuracy    Decimal   @db.Decimal(5, 2)\n  tackles         Int\n  interceptions   Int\n  clearances      Int\n  blocks          Int\n  yellowCards     Int\n  redCards        Int\n  foulsCommitted  Int\n  foulsWon        Int\n  saves           Int\n  goalsConceded   Int\n  cleanSheets     Int\n  rating          Decimal?  @db.Decimal(3, 1)\n  notes           String?\n  ord             Int\n  createdAt       DateTime? @db.Timestamp(6)\n  updatedAt       DateTime? @db.Timestamp(6)\n\n  @@unique([matchId, playerId], map: \"match_statistics_match_id_player_id_unique\")\n  @@index([goals, assists], map: \"match_statistics_goals_assists_index\")\n  @@index([matchId, teamId], map: \"match_statistics_match_id_team_id_index\")\n  @@index([playerId, matchId], map: \"match_statistics_player_id_match_id_index\")\n  @@index([rating], map: \"match_statistics_rating_index\")\n  @@index([teamId, matchId], map: \"match_statistics_team_id_match_id_index\")\n}\n\nmodel MemberClubAdmin {\n  id                    Decimal   @id(map: \"member_club_admins_pkey\") @db.Decimal(20, 0)\n  personId              Decimal   @db.Decimal(20, 0)\n  clubId                Decimal   @db.Decimal(20, 0)\n  emergencyContactName  String?   @db.VarChar(100)\n  emergencyContactPhone String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  bio                   String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@index([status], map: \"member_club_admins_admin_role_status_index\")\n  @@index([clubId], map: \"member_club_admins_club_id_admin_role_index\")\n  @@index([ord], map: \"member_club_admins_ord_index\")\n  @@index([personId], map: \"member_club_admins_person_id_index\")\n}\n\nmodel MemberCoache {\n  id                    Decimal   @id(map: \"member_coaches_pkey\") @db.Decimal(20, 0)\n  personId              Decimal   @db.Decimal(20, 0)\n  licenseNumber         String?   @db.VarChar(100)\n  certification         String?   @db.VarChar(100)\n  specialization        String?   @db.VarChar(100)\n  emergencyContactName  String?   @db.VarChar(100)\n  emergencyContactPhone String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  bio                   String?\n  ord                   Int?\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@index([personId], map: \"member_coaches_person_id_foreign\")\n}\n\nmodel MemberParent {\n  id        Decimal   @id(map: \"member_parents_pkey\") @db.Decimal(20, 0)\n  personId  Decimal   @db.Decimal(20, 0)\n  status    String    @db.VarChar(255)\n  notes     String?\n  ord       Int\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@index([ord], map: \"member_parents_ord_index\")\n  @@index([personId], map: \"member_parents_person_id_index\")\n}\n\nmodel MemberPerson {\n  id        Decimal   @id(map: \"member_persons_pkey\") @db.Decimal(20, 0)\n  firstName String    @db.VarChar(100)\n  lastName  String    @db.VarChar(100)\n  email     String?   @unique(map: \"member_persons_email_unique\") @db.VarChar(100)\n  phone     String?   @db.VarChar(100)\n  dob       DateTime? @db.Date\n  gender    String?   @db.VarChar(255)\n  address   String?   @db.VarChar(100)\n  city      String?   @db.VarChar(100)\n  state     String?   @db.VarChar(100)\n  zipCode   String?   @db.VarChar(100)\n  countryId Decimal?  @db.Decimal(20, 0)\n  photoPath String?   @db.VarChar(100)\n  status    String    @db.VarChar(255)\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@index([countryId], map: \"member_persons_country_id_foreign\")\n}\n\n/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments\nmodel MemberPlayer {\n  id                    Decimal   @id(map: \"member_players_pkey\") @db.Decimal(20, 0)\n  personId              Decimal   @db.Decimal(20, 0)\n  height                Decimal?  @db.Decimal(5, 2)\n  weight                Decimal?  @db.Decimal(5, 2)\n  preferredFoot         String?   @db.VarChar(255)\n  contractStart         DateTime? @db.Date\n  contractEnd           DateTime? @db.Date\n  emergencyContactName  String?   @db.VarChar(100)\n  emergencyContactPhone String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  bio                   String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@index([status], map: \"member_players_base_sport_id_status_index\")\n  @@index([ord], map: \"member_players_ord_index\")\n  @@index([personId], map: \"member_players_person_id_index\")\n}\n\nmodel MemberReferee {\n  id                    Decimal   @id(map: \"member_referees_pkey\") @db.Decimal(20, 0)\n  personId              Decimal   @db.Decimal(20, 0)\n  licenseNumber         String    @unique(map: \"member_referees_license_number_unique\") @db.VarChar(100)\n  licenseLevel          String?   @db.VarChar(100)\n  certification         String?   @db.VarChar(100)\n  refereeType           String    @db.VarChar(255)\n  specialization        String?   @db.VarChar(100)\n  languages             String?\n  matchFee              Decimal?  @db.Decimal(8, 2)\n  emergencyContactName  String?   @db.VarChar(100)\n  emergencyContactPhone String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  bio                   String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@index([licenseNumber], map: \"member_referees_license_number_index\")\n  @@index([ord], map: \"member_referees_ord_index\")\n  @@index([personId], map: \"member_referees_person_id_index\")\n  @@index([refereeType, status], map: \"member_referees_referee_type_status_index\")\n}\n\nmodel MemberSponsor {\n  id                Decimal   @id(map: \"member_sponsors_pkey\") @db.Decimal(20, 0)\n  companyName       String    @db.VarChar(100)\n  contactPerson     String?   @db.VarChar(100)\n  email             String?   @db.VarChar(100)\n  phone             String?   @db.VarChar(100)\n  website           String?   @db.VarChar(100)\n  sponsorLevel      String?   @db.VarChar(100)\n  sponsorshipAmount Decimal?  @db.Decimal(10, 2)\n  contractStart     DateTime? @db.Date\n  contractEnd       DateTime? @db.Date\n  benefits          String?\n  logoPath          String?   @db.VarChar(100)\n  status            String    @db.VarChar(255)\n  notes             String?\n  ord               Int\n  createdAt         DateTime? @db.Timestamp(6)\n  updatedAt         DateTime? @db.Timestamp(6)\n\n  @@index([contractStart, contractEnd], map: \"member_sponsors_contract_start_contract_end_index\")\n  @@index([ord], map: \"member_sponsors_ord_index\")\n  @@index([sponsorLevel, status], map: \"member_sponsors_sponsor_level_status_index\")\n}\n\nmodel MemberTeamManager {\n  id                    Decimal   @id(map: \"member_team_managers_pkey\") @db.Decimal(20, 0)\n  personId              Decimal   @db.Decimal(20, 0)\n  appointedDate         DateTime? @db.Date\n  emergencyContactName  String?   @db.VarChar(100)\n  emergencyContactPhone String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  bio                   String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@index([status], map: \"member_team_managers_manager_type_status_index\")\n  @@index([ord], map: \"member_team_managers_ord_index\")\n  @@index([personId], map: \"member_team_managers_person_id_index\")\n}\n\nmodel OrgClub {\n  id           Decimal   @id(map: \"org_clubs_pkey\") @default(dbgenerated(\"nextval('\\\"BaseField_id_seq\\\"'::regclass)\")) @db.Decimal(20, 0)\n  name         String    @db.VarChar(100)\n  abbr         String?   @db.VarChar(100)\n  description  String?\n  foundedDate  DateTime? @db.Date\n  address      String?   @db.VarChar(100)\n  contactEmail String?   @db.VarChar(100)\n  contactPhone String?   @db.VarChar(100)\n  website      String?   @db.VarChar(100)\n  status       String    @db.VarChar(255)\n  ord          Int?\n  createdAt    DateTime? @db.Timestamp(6)\n  updatedAt    DateTime? @db.Timestamp(6)\n}\n\nmodel OrgLeague {\n  id                   Decimal   @id(map: \"org_leagues_pkey\") @default(dbgenerated(\"nextval('\\\"BaseField_id_seq\\\"'::regclass)\")) @db.Decimal(20, 0)\n  name                 String    @db.VarChar(100)\n  abbr                 String?   @db.VarChar(100)\n  description          String?\n  gameModeId           Decimal?  @db.Decimal(20, 0)\n  groupLevelId         Decimal?  @db.Decimal(20, 0)\n  season               String?   @db.VarChar(100)\n  startDate            DateTime? @db.Date\n  endDate              DateTime? @db.Date\n  registrationDeadline DateTime? @db.Date\n  maxTeams             Int?\n  entryFee             Decimal?  @db.Decimal(10, 2)\n  subscribeEmail       String?   @db.VarChar(100)\n  rules                String?\n  status               String    @db.VarChar(255)\n  ord                  Int?\n  createdAt            DateTime? @db.Timestamp(6)\n  updatedAt            DateTime? @db.Timestamp(6)\n\n  @@index([gameModeId], map: \"org_leagues_game_mode_id_foreign\")\n  @@index([groupLevelId], map: \"org_leagues_group_level_id_foreign\")\n}\n\nmodel OrgTeam {\n  id         Decimal   @id(map: \"org_teams_pkey\") @default(dbgenerated(\"nextval('\\\"BaseField_id_seq\\\"'::regclass)\")) @db.Decimal(20, 0)\n  name       String    @db.VarChar(100)\n  abbr       String?   @db.VarChar(100)\n  note       String?\n  clubId     Decimal?  @db.Decimal(20, 0)\n  sportId    Decimal?  @db.Decimal(20, 0)\n  leagueId   Decimal?  @db.Decimal(20, 0)\n  ageGroup   String?   @db.VarChar(100)\n  gender     Int?      @db.SmallInt\n  skillLevel String?   @db.VarChar(100)\n  color1     String?   @db.VarChar(100)\n  color2     String?   @db.VarChar(100)\n  maxPlayers Int?\n  status     Int       @db.SmallInt\n  ord        Int?\n  createdAt  DateTime? @db.Timestamp(6)\n  updatedAt  DateTime? @db.Timestamp(6)\n\n  @@index([clubId], map: \"org_teams_club_id_foreign\")\n  @@index([leagueId], map: \"org_teams_league_id_foreign\")\n  @@index([sportId], map: \"org_teams_sport_id_foreign\")\n}\n\nmodel PlanGame {\n  id            Decimal   @id(map: \"plan_games_pkey\") @db.Decimal(20, 0)\n  leagueId      Decimal?  @db.Decimal(20, 0)\n  gameName      String?   @db.VarChar(100)\n  homeTeamId    Decimal?  @db.Decimal(20, 0)\n  awayTeamId    Decimal?  @db.Decimal(20, 0)\n  startDatetime DateTime  @db.Timestamp(6)\n  endDatetime   DateTime  @db.Timestamp(6)\n  duration      Int?\n  uniform       String?   @db.VarChar(100)\n  locationId    Decimal?  @db.Decimal(20, 0)\n  isScrimmage   Int       @db.SmallInt\n  status        String    @db.VarChar(255)\n  createdBy     Decimal?  @db.Decimal(20, 0)\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@index([awayTeamId], map: \"plan_games_away_team_id_foreign\")\n  @@index([createdBy], map: \"plan_games_created_by_foreign\")\n  @@index([homeTeamId], map: \"plan_games_home_team_id_foreign\")\n  @@index([leagueId], map: \"plan_games_league_id_foreign\")\n  @@index([locationId], map: \"plan_games_location_id_foreign\")\n}\n\nmodel PlanMeeting {\n  id              Decimal   @id(map: \"plan_meetings_pkey\") @db.Decimal(20, 0)\n  meetingCategory Int?      @db.SmallInt\n  teamId          Decimal?  @db.Decimal(20, 0)\n  startDatetime   DateTime  @db.Timestamp(6)\n  endDatetime     DateTime  @db.Timestamp(6)\n  title           String?\n  content         String?\n  locationId      Decimal?  @db.Decimal(20, 0)\n  status          Int?      @db.SmallInt\n  createdBy       Decimal?  @db.Decimal(20, 0)\n  createdAt       DateTime? @db.Timestamp(6)\n  updatedAt       DateTime? @db.Timestamp(6)\n\n  @@index([createdBy], map: \"plan_meetings_created_by_foreign\")\n  @@index([locationId], map: \"plan_meetings_location_id_foreign\")\n  @@index([teamId], map: \"plan_meetings_team_id_foreign\")\n}\n\nmodel PlanTraining {\n  id              Decimal   @id(map: \"plan_trainings_pkey\") @db.Decimal(20, 0)\n  teamId          Decimal?  @db.Decimal(20, 0)\n  startDatetime   DateTime  @db.Timestamp(6)\n  endDatetime     DateTime  @db.Timestamp(6)\n  trainingContent String?\n  isAllMembers    Int       @db.SmallInt\n  locationId      Decimal?  @db.Decimal(20, 0)\n  recurringType   Int       @db.SmallInt\n  status          String    @db.VarChar(255)\n  createdBy       Decimal?  @db.Decimal(20, 0)\n  createdAt       DateTime? @db.Timestamp(6)\n  updatedAt       DateTime? @db.Timestamp(6)\n\n  @@index([createdBy], map: \"plan_trainings_created_by_foreign\")\n  @@index([locationId], map: \"plan_trainings_location_id_foreign\")\n  @@index([teamId], map: \"plan_trainings_team_id_foreign\")\n}\n\nmodel RelClubClubAdmin {\n  id            Decimal   @id(map: \"rel_club_club_admin_pkey\") @db.Decimal(20, 0)\n  clubId        Decimal   @db.Decimal(20, 0)\n  adminId       Decimal   @db.Decimal(20, 0)\n  joinedAt      DateTime? @db.Timestamp(6)\n  leftAt        DateTime? @db.Timestamp(6)\n  status        String    @db.VarChar(255)\n  role          String    @db.VarChar(255)\n  salary        Decimal?  @db.Decimal(10, 2)\n  contractStart DateTime? @db.Date\n  contractEnd   DateTime? @db.Date\n  notes         String?\n  ord           Int\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@unique([clubId, adminId], map: \"rel_club_admin_club_id_admin_id_unique\")\n  @@index([adminId], map: \"rel_club_admin_admin_id_index\")\n  @@index([adminId, status], map: \"rel_club_admin_admin_id_status_index\")\n  @@index([clubId], map: \"rel_club_admin_club_id_index\")\n  @@index([clubId, status], map: \"rel_club_admin_club_id_status_index\")\n  @@index([role, status], map: \"rel_club_admin_role_status_index\")\n}\n\nmodel RelCompetitionGroupLevel {\n  id            Decimal   @id(map: \"rel_competition_group_level_pkey\") @db.Decimal(20, 0)\n  competitionId Decimal   @db.Decimal(20, 0)\n  groupLevelId  Decimal   @db.Decimal(20, 0)\n  isPrimary     Int       @db.SmallInt\n  notes         String?\n  ord           Int\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@unique([competitionId, groupLevelId], map: \"rel_competition_group_level_competition_id_group_level_id_uniqu\")\n  @@index([competitionId], map: \"rel_competition_group_level_competition_id_index\")\n  @@index([competitionId, isPrimary], map: \"rel_competition_group_level_competition_id_is_primary_index\")\n  @@index([groupLevelId], map: \"rel_competition_group_level_group_level_id_index\")\n}\n\nmodel RelFieldSport {\n  id        Decimal   @id(map: \"rel_field_sport_pkey\") @db.Decimal(20, 0)\n  fieldId   Decimal   @db.Decimal(20, 0)\n  sportId   Decimal   @db.Decimal(20, 0)\n  isPrimary Int       @db.SmallInt\n  notes     String?\n  ord       Int\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@unique([fieldId, sportId], map: \"rel_field_sport_field_id_sport_id_unique\")\n  @@index([fieldId], map: \"rel_field_sport_field_id_index\")\n  @@index([fieldId, isPrimary], map: \"rel_field_sport_field_id_is_primary_index\")\n  @@index([sportId], map: \"rel_field_sport_sport_id_index\")\n}\n\nmodel RelMatchReferee {\n  id          Decimal   @id(map: \"rel_match_referee_pkey\") @db.Decimal(20, 0)\n  matchId     Decimal   @db.Decimal(20, 0)\n  refereeId   Decimal   @db.Decimal(20, 0)\n  assignedAt  DateTime? @db.Timestamp(6)\n  confirmedAt DateTime? @db.Timestamp(6)\n  cancelledAt DateTime? @db.Timestamp(6)\n  status      String    @db.VarChar(255)\n  matchFee    Decimal?  @db.Decimal(8, 2)\n  notes       String?\n  ord         Int\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@unique([matchId, refereeId], map: \"rel_match_referee_match_id_referee_id_unique\")\n  @@index([matchId], map: \"rel_match_referee_match_id_index\")\n  @@index([matchId, status], map: \"rel_match_referee_match_id_status_index\")\n  @@index([refereeId], map: \"rel_match_referee_referee_id_index\")\n  @@index([refereeId, status], map: \"rel_match_referee_referee_id_status_index\")\n  @@index([status], map: \"rel_match_referee_referee_role_status_index\")\n}\n\nmodel RelPlayerParent {\n  id                    Decimal   @id(map: \"rel_player_parents_pkey\") @db.Decimal(20, 0)\n  playerId              Decimal   @db.Decimal(20, 0)\n  parentId              Decimal   @db.Decimal(20, 0)\n  assignedAt            DateTime? @db.Timestamp(6)\n  removedAt             DateTime? @db.Timestamp(6)\n  relationship          String?   @db.VarChar(100)\n  isPrimaryContact      Int       @db.SmallInt\n  canPickup             Int       @db.SmallInt\n  receivesNotifications Int       @db.SmallInt\n  occupation            String?   @db.VarChar(100)\n  employer              String?   @db.VarChar(100)\n  workPhone             String?   @db.VarChar(100)\n  status                String    @db.VarChar(255)\n  notes                 String?\n  ord                   Int\n  createdAt             DateTime? @db.Timestamp(6)\n  updatedAt             DateTime? @db.Timestamp(6)\n\n  @@unique([playerId, parentId], map: \"rel_player_parents_player_id_parent_id_unique\")\n  @@index([parentId], map: \"rel_player_parents_parent_id_index\")\n  @@index([parentId, status], map: \"rel_player_parents_parent_id_status_index\")\n  @@index([playerId], map: \"rel_player_parents_player_id_index\")\n  @@index([playerId, isPrimaryContact], map: \"rel_player_parents_player_id_is_primary_contact_index\")\n  @@index([relationship, status], map: \"rel_player_parents_relationship_status_index\")\n}\n\nmodel RelSponsorClub {\n  id                Decimal   @id(map: \"rel_sponsor_club_pkey\") @db.Decimal(20, 0)\n  sponsorId         Decimal   @db.Decimal(20, 0)\n  clubId            Decimal   @db.Decimal(20, 0)\n  startedAt         DateTime? @db.Timestamp(6)\n  endedAt           DateTime? @db.Timestamp(6)\n  status            String    @db.VarChar(255)\n  sponsorshipAmount Decimal?  @db.Decimal(10, 2)\n  benefits          String?\n  notes             String?\n  ord               Int\n  createdAt         DateTime? @db.Timestamp(6)\n  updatedAt         DateTime? @db.Timestamp(6)\n\n  @@unique([sponsorId, clubId], map: \"rel_sponsor_club_sponsor_id_club_id_unique\")\n  @@index([clubId], map: \"rel_sponsor_club_club_id_index\")\n  @@index([sponsorId], map: \"rel_sponsor_club_sponsor_id_index\")\n  @@index([status, startedAt], map: \"rel_sponsor_club_status_started_at_index\")\n}\n\nmodel RelSponsorLeague {\n  id                Decimal   @id(map: \"rel_sponsor_league_pkey\") @db.Decimal(20, 0)\n  sponsorId         Decimal   @db.Decimal(20, 0)\n  leagueId          Decimal   @db.Decimal(20, 0)\n  startedAt         DateTime? @db.Timestamp(6)\n  endedAt           DateTime? @db.Timestamp(6)\n  status            String    @db.VarChar(255)\n  sponsorshipAmount Decimal?  @db.Decimal(10, 2)\n  benefits          String?\n  notes             String?\n  ord               Int\n  createdAt         DateTime? @db.Timestamp(6)\n  updatedAt         DateTime? @db.Timestamp(6)\n\n  @@unique([sponsorId, leagueId], map: \"rel_sponsor_league_sponsor_id_league_id_unique\")\n  @@index([leagueId], map: \"rel_sponsor_league_league_id_index\")\n  @@index([sponsorId], map: \"rel_sponsor_league_sponsor_id_index\")\n  @@index([status, startedAt], map: \"rel_sponsor_league_status_started_at_index\")\n}\n\nmodel RelSponsorTeam {\n  id                Decimal   @id(map: \"rel_sponsor_team_pkey\") @db.Decimal(20, 0)\n  sponsorId         Decimal   @db.Decimal(20, 0)\n  teamId            Decimal   @db.Decimal(20, 0)\n  startedAt         DateTime? @db.Timestamp(6)\n  endedAt           DateTime? @db.Timestamp(6)\n  status            String    @db.VarChar(255)\n  sponsorshipAmount Decimal?  @db.Decimal(10, 2)\n  benefits          String?\n  notes             String?\n  ord               Int\n  createdAt         DateTime? @db.Timestamp(6)\n  updatedAt         DateTime? @db.Timestamp(6)\n\n  @@unique([sponsorId, teamId], map: \"rel_sponsor_team_sponsor_id_team_id_unique\")\n  @@index([sponsorId], map: \"rel_sponsor_team_sponsor_id_index\")\n  @@index([status, startedAt], map: \"rel_sponsor_team_status_started_at_index\")\n  @@index([teamId], map: \"rel_sponsor_team_team_id_index\")\n}\n\nmodel RelTeamCoach {\n  id               Decimal   @id(map: \"rel_team_coach_pkey\") @db.Decimal(20, 0)\n  teamId           Decimal   @db.Decimal(20, 0)\n  coachId          Decimal   @db.Decimal(20, 0)\n  joinedAt         DateTime? @db.Timestamp(6)\n  leftAt           DateTime? @db.Timestamp(6)\n  status           String    @db.VarChar(255)\n  coachTypeId      BigInt?\n  salary           Decimal?  @db.Decimal(10, 2)\n  contractStart    DateTime? @db.Date\n  contractEnd      DateTime? @db.Date\n  responsibilities String?\n  notes            String?\n  ord              Int\n  createdAt        DateTime? @db.Timestamp(6)\n  updatedAt        DateTime? @db.Timestamp(6)\n\n  @@unique([teamId, coachId], map: \"rel_team_coach_team_id_coach_id_unique\")\n  @@index([coachId], map: \"rel_team_coach_coach_id_index\")\n  @@index([coachId, status], map: \"rel_team_coach_coach_id_status_index\")\n  @@index([teamId], map: \"rel_team_coach_team_id_index\")\n  @@index([teamId, status], map: \"rel_team_coach_team_id_status_index\")\n}\n\nmodel RelTeamPlayer {\n  id           Decimal   @id(map: \"rel_team_player_pkey\") @db.Decimal(20, 0)\n  teamId       Decimal   @db.Decimal(20, 0)\n  playerId     Decimal   @db.Decimal(20, 0)\n  joinedAt     DateTime? @db.Timestamp(6)\n  leftAt       DateTime? @db.Timestamp(6)\n  status       String    @db.VarChar(255)\n  jerseyNumber String?   @db.VarChar(100)\n  positionId   BigInt?\n  notes        String?\n  ord          Int\n  createdAt    DateTime? @db.Timestamp(6)\n  updatedAt    DateTime? @db.Timestamp(6)\n\n  @@unique([teamId, playerId], map: \"rel_team_player_team_id_player_id_unique\")\n  @@index([playerId], map: \"rel_team_player_player_id_index\")\n  @@index([teamId], map: \"rel_team_player_team_id_index\")\n}\n\nmodel RelTeamTeamManager {\n  id               Decimal   @id(map: \"rel_team_team_manager_pkey\") @db.Decimal(20, 0)\n  teamId           Decimal   @db.Decimal(20, 0)\n  managerId        Decimal   @db.Decimal(20, 0)\n  joinedAt         DateTime? @db.Timestamp(6)\n  leftAt           DateTime? @db.Timestamp(6)\n  status           String    @db.VarChar(255)\n  managerTypeId    String?   @db.VarChar(255)\n  salary           Decimal?  @db.Decimal(10, 2)\n  contractStart    DateTime? @db.Date\n  contractEnd      DateTime? @db.Date\n  responsibilities String?\n  notes            String?\n  ord              Int\n  createdAt        DateTime? @db.Timestamp(6)\n  updatedAt        DateTime? @db.Timestamp(6)\n\n  @@unique([teamId, managerId], map: \"rel_team_manager_team_id_manager_id_unique\")\n  @@index([managerId], map: \"rel_team_manager_manager_id_index\")\n  @@index([managerId, status], map: \"rel_team_manager_manager_id_status_index\")\n  @@index([managerTypeId, status], map: \"rel_team_manager_role_status_index\")\n  @@index([teamId], map: \"rel_team_manager_team_id_index\")\n  @@index([teamId, status], map: \"rel_team_manager_team_id_status_index\")\n}\n\nmodel SportCoachType {\n  id        Decimal   @id(map: \"sport_coach_types_pkey\") @db.Decimal(20, 0)\n  sportId   Decimal   @db.Decimal(20, 0)\n  name      String    @db.VarChar(50)\n  abbr      String    @db.VarChar(100)\n  color     String    @db.VarChar(20)\n  note      String?\n  isActive  Int       @db.SmallInt\n  ord       Int\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@unique([sportId, name], map: \"sport_coach_types_sport_id_value_unique\")\n  @@index([sportId, isActive], map: \"sport_coach_types_sport_id_is_active_index\")\n  @@index([sportId, ord], map: \"sport_coach_types_sport_id_ord_index\")\n}\n\nmodel SportEventType {\n  id               Decimal   @id(map: \"sport_event_types_pkey\") @db.Decimal(20, 0)\n  name             String    @db.VarChar(100)\n  abbr             String?   @db.VarChar(100)\n  category         Int?\n  evaluationMetric Int?\n  code             String?   @db.VarChar(100)\n  sportId          Decimal?  @db.Decimal(20, 0)\n  isVisible        Int       @db.SmallInt\n  note             String?\n  ord              Int?\n  score            Int\n  slot             Int\n  createdAt        DateTime? @db.Timestamp(6)\n  updatedAt        DateTime? @db.Timestamp(6)\n\n  @@index([sportId], map: \"sport_event_types_sport_id_foreign\")\n}\n\n/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments\nmodel SportGamePeriod {\n  id        Decimal   @id(map: \"sport_game_periods_pkey\") @db.Decimal(20, 0)\n  sportId   Decimal   @db.Decimal(20, 0)\n  name      String    @db.VarChar(100)\n  ord       Int\n  duration  Int?\n  note      String?\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@index([sportId], map: \"sport_game_periods_sport_id_index\")\n  @@index([sportId, ord], map: \"sport_game_periods_sport_id_ord_index\")\n}\n\nmodel SportManagerType {\n  id        Decimal   @id(map: \"sport_manager_types_pkey\") @db.Decimal(20, 0)\n  sportId   Decimal?  @db.Decimal(20, 0)\n  name      String    @db.VarChar(50)\n  abbr      String    @db.VarChar(100)\n  color     String    @db.VarChar(20)\n  note      String?\n  isActive  Int       @db.SmallInt\n  ord       Int\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@unique([sportId, name], map: \"sport_manager_types_sport_id_value_unique\")\n  @@index([sportId, isActive], map: \"sport_manager_types_sport_id_is_active_index\")\n  @@index([sportId, ord], map: \"sport_manager_types_sport_id_ord_index\")\n}\n\nmodel SportPlayerPosition {\n  id        Decimal   @id(map: \"sport_player_positions_pkey\") @db.Decimal(20, 0)\n  name      String    @db.VarChar(100)\n  abbr      String    @db.VarChar(100)\n  note      String?\n  sportId   Decimal   @db.Decimal(20, 0)\n  ord       Int?\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@index([sportId], map: \"sport_player_positions_sport_id_foreign\")\n}\n\nmodel SportRefereeType {\n  id        Decimal   @id(map: \"sport_referee_types_pkey\") @db.Decimal(20, 0)\n  sportId   Decimal   @db.Decimal(20, 0)\n  name      String    @db.VarChar(50)\n  abbr      String    @db.VarChar(100)\n  color     String    @db.VarChar(20)\n  note      String?\n  isActive  Int       @db.SmallInt\n  ord       Int\n  createdAt DateTime? @db.Timestamp(6)\n  updatedAt DateTime? @db.Timestamp(6)\n\n  @@unique([sportId, name], map: \"sport_referee_types_sport_id_value_unique\")\n  @@index([sportId, isActive], map: \"sport_referee_types_sport_id_is_active_index\")\n  @@index([sportId, ord], map: \"sport_referee_types_sport_id_ord_index\")\n}\n\nmodel SubFeature {\n  id          Decimal   @id(map: \"subscription_features_pkey\") @db.Decimal(20, 0)\n  name        String    @db.VarChar(100)\n  description String?\n  category    String?   @db.VarChar(100)\n  icon        String?   @db.VarChar(100)\n  isActive    Int       @db.SmallInt\n  ord         Int\n  createdAt   DateTime? @db.Timestamp(6)\n  updatedAt   DateTime? @db.Timestamp(6)\n\n  @@index([category, isActive], map: \"subscription_features_category_is_active_index\")\n  @@index([isActive], map: \"subscription_features_is_active_index\")\n  @@index([ord], map: \"subscription_features_ord_index\")\n}\n\nmodel SubForTeam {\n  id            Decimal   @id(map: \"subscription_for_team_pkey\") @db.Decimal(20, 0)\n  teamId        Decimal   @db.Decimal(20, 0)\n  planId        Decimal   @db.Decimal(20, 0)\n  status        String    @db.VarChar(255)\n  startedAt     DateTime  @db.Timestamp(6)\n  expiresAt     DateTime? @db.Timestamp(6)\n  autoRenew     Int       @db.SmallInt\n  paymentMethod String?   @db.VarChar(100)\n  lastPaymentAt DateTime? @db.Timestamp(6)\n  nextPaymentAt DateTime? @db.Timestamp(6)\n  notes         String?\n  ord           Int\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@index([expiresAt], map: \"rel_sub_for_team_expires_at_index\")\n  @@index([planId, status], map: \"rel_sub_for_team_plan_id_status_index\")\n  @@index([status, expiresAt], map: \"rel_sub_for_team_status_expires_at_index\")\n  @@index([teamId, status], map: \"rel_sub_for_team_team_id_status_index\")\n}\n\nmodel SubForUser {\n  id            Decimal   @id(map: \"subscription_for_user_pkey\") @db.Decimal(20, 0)\n  userId        Decimal   @db.Decimal(20, 0)\n  planId        Decimal   @db.Decimal(20, 0)\n  status        String    @db.VarChar(255)\n  startedAt     DateTime  @db.Timestamp(6)\n  expiresAt     DateTime? @db.Timestamp(6)\n  autoRenew     Int       @db.SmallInt\n  paymentMethod String?   @db.VarChar(100)\n  lastPaymentAt DateTime? @db.Timestamp(6)\n  nextPaymentAt DateTime? @db.Timestamp(6)\n  notes         String?\n  ord           Int\n  createdAt     DateTime? @db.Timestamp(6)\n  updatedAt     DateTime? @db.Timestamp(6)\n\n  @@index([expiresAt], map: \"rel_sub_for_user_expires_at_index\")\n  @@index([planId, status], map: \"rel_sub_for_user_plan_id_status_index\")\n  @@index([status, expiresAt], map: \"rel_sub_for_user_status_expires_at_index\")\n  @@index([userId, status], map: \"rel_sub_for_user_user_id_status_index\")\n}\n\nmodel SubPlan {\n  id             Decimal   @id(map: \"subscription_plans_pkey\") @db.Decimal(20, 0)\n  name           String    @db.VarChar(100)\n  planType       String    @db.VarChar(255)\n  price          Decimal   @db.Decimal(10, 2)\n  isPopular      Int       @db.SmallInt\n  description    String?\n  features       String?\n  maxTeams       Int?\n  maxPlayers     Int?\n  maxCoaches     Int?\n  maxReferees    Int?\n  storageLimitGb Int?\n  isActive       Int       @db.SmallInt\n  ord            Int\n  createdAt      DateTime? @db.Timestamp(6)\n  updatedAt      DateTime? @db.Timestamp(6)\n\n  @@index([isPopular], map: \"subscription_plans_is_popular_index\")\n  @@index([planType, isActive], map: \"subscription_plans_plan_type_is_active_index\")\n  @@index([price], map: \"subscription_plans_price_index\")\n}\n\nmodel SubPlanFeature {\n  id         Decimal   @id(map: \"sub_plan_features_pkey\") @db.Decimal(20, 0)\n  planId     Decimal   @db.Decimal(20, 0)\n  featureId  Decimal   @db.Decimal(20, 0)\n  isIncluded Int       @db.SmallInt\n  notes      String?\n  ord        Int\n  createdAt  DateTime? @db.Timestamp(6)\n  updatedAt  DateTime? @db.Timestamp(6)\n\n  @@unique([planId, featureId], map: \"rel_sub_features_plan_id_feature_id_unique\")\n  @@index([featureId, isIncluded], map: \"rel_sub_features_feature_id_is_included_index\")\n  @@index([planId, isIncluded], map: \"rel_sub_features_plan_id_is_included_index\")\n}\n\nmodel SysUser {\n  id              Decimal   @id(map: \"sys_users_pkey\") @db.Decimal(20, 0)\n  firstName       String    @db.VarChar(100)\n  lastName        String    @db.VarChar(100)\n  email           String    @unique(map: \"sys_users_email_unique\") @db.VarChar(100)\n  emailVerifiedAt DateTime? @db.Timestamp(6)\n  password        String    @db.VarChar(100)\n  status          String    @db.VarChar(100)\n  personId        Decimal?  @db.Decimal(20, 0)\n  rememberToken   String?   @db.VarChar(100)\n  createdAt       DateTime? @db.Timestamp(6)\n  updatedAt       DateTime? @db.Timestamp(6)\n\n  @@index([personId], map: \"sys_users_person_id_foreign\")\n}\n",
  "inlineSchemaHash": "7a22a6edc3109559852c28bcf84076a57899d1e53edb4032043302d443cef569",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"BaseCompetition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BaseCountry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BaseField\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sportIds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BaseGroupLevel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minAge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxAge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BaseSport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"GameEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"competitionId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"eventDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"venue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"GameMatche\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"homeTeamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"awayTeamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"homeTeamScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"awayTeamScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MatchEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minute\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"second\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldX\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"fieldY\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isConfirmed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MatchLineup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"formation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lineupData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"announcedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isConfirmed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MatchMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"mediaType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MatchRoster\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isStarting\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isSubstitute\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jerseyNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"substitutionInMinute\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"substitutionOutMinute\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"substitutionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minutesPlayed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MatchStatistic\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minutesPlayed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goals\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assists\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shots\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shots_on_target\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passesCompleted\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passAccuracy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tackles\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"interceptions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clearances\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blocks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"yellowCards\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"redCards\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foulsCommitted\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foulsWon\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"saves\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"goalsConceded\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cleanSheets\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberClubAdmin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clubId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberCoache\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberParent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberPerson\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"photoPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberPlayer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"preferredFoot\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contractEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberReferee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refereeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberSponsor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorshipAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"contractStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contractEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MemberTeamManager\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"appointedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrgClub\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"foundedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrgLeague\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameModeId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"groupLevelId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"season\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registrationDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"maxTeams\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entryFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"subscribeEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rules\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrgTeam\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clubId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ageGroup\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxPlayers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PlanGame\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"gameName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"homeTeamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"awayTeamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isScrimmage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PlanMeeting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"meetingCategory\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PlanTraining\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDatetime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trainingContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAllMembers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"recurringType\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelClubClubAdmin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clubId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"contractStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contractEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelCompetitionGroupLevel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"competitionId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"groupLevelId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelFieldSport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"fieldId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isPrimary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelMatchReferee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"matchId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"refereeId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelPlayerParent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"removedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"relationship\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrimaryContact\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"canPickup\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receivesNotifications\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"occupation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelSponsorClub\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sponsorId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"clubId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorshipAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelSponsorLeague\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sponsorId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"leagueId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorshipAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelSponsorTeam\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sponsorId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorshipAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelTeamCoach\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"coachId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coachTypeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"contractStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contractEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"responsibilities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelTeamPlayer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jerseyNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RelTeamTeamManager\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leftAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"managerTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"contractStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"contractEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"responsibilities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportCoachType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportEventType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"evaluationMetric\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isVisible\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slot\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportGamePeriod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportManagerType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportPlayerPosition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SportRefereeType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sportId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"abbr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SubFeature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SubForTeam\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"autoRenew\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SubForUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"autoRenew\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SubPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isPopular\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxTeams\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxPlayers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCoaches\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxReferees\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storageLimitGb\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SubPlanFeature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"featureId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isIncluded\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ord\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SysUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"personId\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"rememberToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

